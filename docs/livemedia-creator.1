.TH LIVEMEDIA-CREATOR 1 2014\-04\-03
.SH NAME
livemedia-creator \- Create live install media

.SH SYNOPSIS
livemedia-creator [-h]
    (--make-iso | --make-disk | --make-fsimage | --make-appliance | --make-ami | --make-tar | --make-pxe-live | --make-ostree-live)
    [--iso ISO] [--disk-image DISK_IMAGE]
    [--disk-size DISK_SIZE]
    [--fs-image FS_IMAGE] [--ks KS]
    [--image-name IMAGE_NAME] [--image-only]
    [--fs-label FS_LABEL]
    [--qcow2] [--qcow2-arg QCOW2_ARGS]
    [--compression] [--compress-arg]
    [--live-rootfs-size LIVE_ROOTFS_SIZE]
    [--live-rootfs-keep-size LIVE_ROOTFS_KEEP_SIZE]
    [--keep-image] [--no-virt] [--proxy PROXY]
    [--anaconda-arg ANACONDA_ARGS]
    [--armplatform ARMPLATFORM] [--location LOCATION]
    [--logfile LOGFILE]
    [--lorax-templates LORAX_TEMPLATES] [--tmp TMP]
    [--resultdir RESULT_DIR] [--app-name APP_NAME]
    [--app-template APP_TEMPLATE] [--app-file APP_FILE]
    [--ram MEMORY] [--vcpus VCPUS] [--vnc VNC]
    [--arch ARCH] [--kernel-args KERNEL_ARGS]
    [--dracut-arg DRACUT_ARGS] [--title TITLE]
    [--project PROJECT] [--releasever RELEASEVER]
    [--volid VOLID] [--squashfs_args SQUASHFS_ARGS]
    [--timeout TIMEOUT]

.SH DESCRIPTION
livemedia-creator uses Anaconda, kickstart and Lorax to create bootable media
that use the same install path as a normal system install. It can be used to
make live isos, bootable (partitioned) disk images and filesystem images for
use with virtualization.

The general idea is to use virt-install to install into a disk image and then
use the disk image to create the bootable media.

livemedia-creator --help will describe all of the options available. To create a
bootable iso you need at least:

--make-iso to create a final bootable .iso
--iso to specify the Anaconda install media to use with virt-install
--ks is the kickstart to use to install the system


.SH OPTIONAL ARGUMENTS:
.TP
\fB\-h, \-\-help\fR
show this help message and exit

.TP
\fB\-\-make\-iso\fR
Build a live iso

.TP
\fB\-\-make\-disk\fR
Build a partitioned disk image

.TP
\fB\-\-make\-fsimage\fR
Build a filesystem image

.TP
\fB\-\-make\-appliance\fR
Build an appliance image and XML description

.TP
\fB\-\-make\-ami\fR
Build an ami image

.TP
\fB\-\-make\-tar\fR
Build a tar of the root filesystem. Defaults to root.tar.xz

.TP
\fB\-\-make\-pxe\-live\fR
Build a live pxe boot squashfs image

.TP
\fB\-\-make\-ostree\-live\fR
Build a live pxe boot squashfs image of Atomic Host

.TP
\fB\-\-iso ISO\fR
Anaconda installation .iso path to use for virt-install

.TP
\fB\-\-disk\-image DISK_IMAGE\fR
Path to disk image to use for creating final image

.TP
\fB\-\-disk\-size DISK_SIZE\fR
Size of final disk image in GiB.

.TP
\fB\-\-fs\-image FS_IMAGE\fR
Path to existing filesystem image to use for creating final image.

.TP
\fB\-\-qcow2\fR
Create qcow2 image instead of raw sparse image when making disk images.

.TP
\fB\-\-qcow2\-arg\fR
Arguments to pass to qemu-img. Pass once for each argument

.TP
\fB\-\-compress\fR
Compression binary for make-tar. xz, lzma, gzip, and bzip2 are supported. xz is the default.

.TP
\fB\-\-compress\-arg\fR
Arguments to pass to compression. Pass once for each argument

.TP
\fB\-\-ks KS\fR
Kickstart file defining the install.

.TP
\fB\-\-image\-name IMAGE_NAME\fR
Name of fs/disk image to create. Default is a random name.

.TP
\fB\-\-fs\-label FS_LABEL\fR
Label to set on fsimage, default is 'Anaconda'

.TP
\fB\-\-image\-only\fR
Exit after creating fs/disk image.

.TP
\fB\-\-keep\-image\fR
Keep raw disk image after .iso creation

.TP
\fB\-\-no\-virt\fR
Use Anaconda's image install instead of virt-install

.TP
\fB\-\-proxy PROXY\fR
proxy URL to use for the install

.TP
\fB\-\-anaconda\-arg ANACONDA_ARGS\fR
Additional argument to pass to anaconda (no-virt mode). Pass once for eachargument

.TP
\fB\-\-armplatform ARMPLATFORM\fR
the platform to use when creating images for ARM, i.e., highbank, mvebu, omap,tegra, etc.

.TP
\fB\-\-location LOCATION\fR
location of iso directory tree with initrd.img and vmlinuz. Used to run virt-install with a newer initrd than the iso.

.TP
\fB\-\-logfile LOGFILE\fR
Path to logfile

.TP
\fB\-\-lorax\-templates LORAX_TEMPLATES\fR
Path to mako templates for lorax

.TP
\fB\-\-tmp TMP\fR
Top level temporary directory

.TP
\fB\-\-resultdir RESULT_DIR\fR
Directory to copy the resulting images and iso into. Defaults to the temporaryworking directory

.TP
\fB\-\-title TITLE\fR
Substituted for @TITLE@ in bootloader config files

.TP
\fB\-\-project PROJECT\fR
substituted for @PROJECT@ in bootloader config files

.TP
\fB\-\-releasever RELEASEVER\fR
substituted for @VERSION@ in bootloader config files

.TP
\fB\-\-volid VOLID\fR
volume id

.TP
\fB\-\-squashfs_args SQUASHFS_ARGS\fR
additional squashfs args

.TP
\fB\-\-timeout TIMEOUT\fR
Cancel installer after X minutes

.SH APPLIANCE ARGUMENTS:
.TP
\fB\-\-app\-name APP_NAME\fR
Name of appliance to pass to template

.TP
\fB\-\-app\-template APP_TEMPLATE\fR
Path to template to use for appliance data.

.TP
\fB\-\-app\-file APP_FILE\fR
Appliance template results file.

.SH PXE\-LIVE ARGUMENTS:
.TP
\fB\-\-live\-rootfs\-size\fR
Size of root filesystem of live image in GiB. By default approximate size of space used in root filesystem is used.

.TP
\fB\-\-live\-rootfs\-keep\-size\fR
Keep the size of original root filesystem (rounded down to GiB) in live image

.SH VIRT\-INSTALL ARGUMENTS:
.TP
\fB\-\-ram MEMORY\fR
Memory to allocate for installer in megabytes.

.TP
\fB\-\-vcpus VCPUS\fR
Passed to --vcpus command

.TP
\fB\-\-vnc VNC\fR
Passed to --graphics command

.TP
\fB\-\-arch ARCH\fR
Passed to --arch command

.TP
\fB\-\-kernel\-args KERNEL_ARGS\fR
Additional argument to pass to the installation kernel

.SH DRACUT ARGUMENTS:
.TP
\fB\-\-dracut\-arg DRACUT_ARGS\fR
Argument to pass to dracut when rebuilding the initramfs. Pass this once foreach argument. NOTE: this overrides the default.

.SH "SEE ALSO"
Documentation in /usr/share/doc/lorax/README.livemedia-creator

.SH AUTHOR
.nf
Brian C. Lane
.fi

